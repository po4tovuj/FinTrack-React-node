services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fintrack-postgres
    environment:
      POSTGRES_DB: fintrack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - fintrack-network

  # Backend API (Node.js + Apollo Server)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fintrack-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fintrack
      JWT_SECRET: your-jwt-secret-key
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - fintrack-network
    command: npm run dev

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fintrack-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_GRAPHQL_URL: http://localhost:4000/graphql
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - fintrack-network
    command: npm run dev

  # Redis (for caching and real-time features)
  redis:
    image: redis:7-alpine
    container_name: fintrack-redis
    ports:
      - "6379:6379"
    networks:
      - fintrack-network

volumes:
  postgres_data:

networks:
  fintrack-network:
    driver: bridge